---
title: Introduction
description: Introduces the basics of the Learn Ansible tutorial and the ansible command.
steps:
  - desc:
      Welcome to Learn Ansible.
      This will give you a quick intro to how this command program works.

      In order to advance to the next step in the tutorial use type the command 'tutorial' or 'tutorial next' into your shell.

  - desc: |
      That will advance you to the next step in the tutorial. If you need to see the text for the current step you are on you can use the 'tutorial repeat' command.

      To see the list of available lessons use 'tutorial lessons'.
      You can switch to another lesson using 'tutorial set-lesson LESSON_NAME'.


  - desc: |
      The first thing you need to do is ensure that ansible is working correctly. Try running the command:

      'ansible all -m ping'


  - desc: |
      You should see the following message:

      192.168.27.4 | SUCCESS => {
          "changed": false,
          "ping": "pong"
      }
      192.168.27.5 | SUCCESS => {
          "changed": false,
          "ping": "pong"
      }
      192.168.27.3 | SUCCESS => {
          "changed": false,
          "ping": "pong"
      }

      This shows that ansible can ping each of the three servers that we have pre-configured for you. If any of these pings fail, there might be a problem with the inventory of hosts.


  - desc: |
      Now, cd to the directory '/etc/ansible'.

      We have set this directory up so that it also availble on your local machine. If you look in the base directory for this ansible-learn, you will see a folder named etc/. Any changes you make in etc/ will be available in the ansible-control docker container and vice versa. This allows you to edit the files contained in /etc/ansible using vim or nano in the ansible-control container or using whichever editor you have installed on your local machine.


  - desc: |
      Take a look at the 'hosts' file in '/etc/ansible'. This is where the connection information to our simulated servers is stored. This is our inventory of servers. Here we can set any variables that we need about specific hosts as well as group them into arbitrary groups.

      Try running 'ansible group2 -m ping'. This time you'll notice that it only pings the servers that are in group2. You can specify any group or individual host using the 'ansible' command.

      Take some time to go over the inventory documentation at http://docs.ansible.com/ansible/intro_inventory.html. There you can learn how to specify variables for groups, as well as break the inventory file up into separate YAML files. If you look closesly you'll notice that the ansible_user and ansible_ssh_private_key_file is the same for all three hosts. See if you can create a group var for the container group to specify these variables for all of them at once.
